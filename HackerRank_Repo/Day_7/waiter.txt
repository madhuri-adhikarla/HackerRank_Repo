import java.util.Scanner;
import java.util.Stack;

public class Solution {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);

        int N = s.nextInt();
        int Q = s.nextInt();

        Stack<Integer> A = new Stack<Integer>();
        for (int i = 0; i < N; i++) {
            A.push(s.nextInt());
        }

        int prime = 2;
        for (int i = 0; i < Q; i++) {
            Stack<Integer> B = new Stack<Integer>();
            Stack<Integer> nextA = new Stack<Integer>();
            while (!A.empty()) {
                int num = A.pop();
                if (num % prime == 0) {
                    B.push(num);
                } else {
                    nextA.push(num);
                }
            }

            printStack(B);
            A = nextA;
            prime = nextPrime(prime);
        }
        printStack(A);

        s.close();
    }
        static void printStack(Stack<Integer> s) {
        while (!s.empty()) {
            System.out.println(s.pop());
        }
    }

    static int nextPrime(int start) {
        for (int i = start + 1;; i++) {
            if (isPrime(i)) {
                return i;
            }
        }
    }

    static boolean isPrime(int n) {
        for (int i = 2; i * i <= n; i++) {
            if (n % i == 0) {
                return false;
            }
        }
        return true;
    }
}