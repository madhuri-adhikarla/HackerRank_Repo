import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

  static int sherlockAndAnagrams(String s) {
    int count = 0;
    int limit = 1; //number of characters to be considered for a substring 1, 2 ,3..
    while (limit < s.length()) {
      for (int i = 0; i <= s.length() - limit; i++) {
        char[] compare = s.substring(i, i + limit).toCharArray();
        Arrays.sort(compare);
        for (int j = i + 1; j <= s.length() - limit; j++) {
          char[] possible = s.substring(j, j + limit).toCharArray();
          Arrays.sort(possible);
          if (Arrays.equals(compare, possible)) {
            count++;
          }  //if
        }    //for (j)
      }      //for(i)
      limit++;
    }     //while

    return count;

    }
    
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            String s = scanner.nextLine();

            int result = sherlockAndAnagrams(s);

            bufferedWriter.write(String.valueOf(result));
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
